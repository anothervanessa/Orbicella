[
  {
    "objectID": "orbicella_quarto_nb.html",
    "href": "orbicella_quarto_nb.html",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "",
    "text": "body-header: | This page brought to you by https://www.eurekalert.org/multimedia/927876 margin-header: |\nWe are running an ABBA-BABA test for hybridaztion in the Orbicella species complex. The test requires a VCF file containing variants for each species against a reference (in our case, we will use the outgroup Cyphastrea as the reference), a species tree in Newik format, and a file specifying the sample-name/species pair. I was provided with genomes for O.faveolata, O. annularis, and O. franksi. I was also provided with a metagenome for Cyphastrea.\nRight now, my first task is to create/find a pipeline to merge the VCF files produced from the pairwise SNP-calling in MUMmer(nucmer) into a single VCF file of (orthologous?) SNP sites shared between the three species."
  },
  {
    "objectID": "orbicella_quarto_nb.html#variant-calling",
    "href": "orbicella_quarto_nb.html#variant-calling",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "Variant Calling",
    "text": "Variant Calling\n```{unix}\n# This code calls the SNPs between the query and ref (O.fav). The\n# ref will later be changed to Cyphastrea.\n\nnucmer -c 100 -p sp1 Orbicella_faveolata_cds.fna Orbicella_annularis_cds.fna\nnucmer -c 100 -p sp2 Orbicella_faveolata_cds.fna Orbicella_franksi_cds.fna\ndelta-filter -r -q sp1.delta > sp1.filter\ndelta-filter -r -q sp2.delta > sp2.filter\n\n# Option -T is required for input to all2vcf program\nshow-snps -T sp1.filter > sp1_T.snps\nshow-snps -T sp2.filter > sp2_T.snps\n\n```\nNucmer only outputs .snps files, so I am using this script to transform the data into VCF format: https://github.com/MatteoSchiavinato/all2vcf\n```{unix}\n./all2vcf mummer --snps sp1_T.snps --reference Orbicella_faveolata_cds.fna --type SNP --input-header --no-Ns > sp1.vcf\n./all2vcf mummer --snps sp2_T.snps --reference Orbicella_faveolata_cds.fna --type SNP --input-header --no-Ns > sp2.vcf\n\n# Get stats on VCF files.\nall2vcf stats --vcf sp1.vcf\n```"
  },
  {
    "objectID": "orbicella_quarto_nb.html#troubleshooting-all2vcf",
    "href": "orbicella_quarto_nb.html#troubleshooting-all2vcf",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "Troubleshooting all2vcf",
    "text": "Troubleshooting all2vcf\nmargin-header: |  So something went wrong when I tried to convert the .snp output from Mummer into VCF format. The chromosome and position data is present but I don’t see genotypes.\n```{unix}}\nbcftools view -h sp1.vcf  | awk '/INFO/ || /FORMAT/'\n```\nIt looks like I don’t have a FORMAT or SAMPLE column. I only have the first 8 columns."
  },
  {
    "objectID": "orbicella_quarto_nb.html#demo-explore-vcf-files-with-bcftools-httpseriqande.github.ioeca-bioinf-handbookbasic-handling-of-vcf-files.html",
    "href": "orbicella_quarto_nb.html#demo-explore-vcf-files-with-bcftools-httpseriqande.github.ioeca-bioinf-handbookbasic-handling-of-vcf-files.html",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "Demo: Explore vcf files with bcftools: https://eriqande.github.io/eca-bioinf-handbook/basic-handling-of-vcf-files.html",
    "text": "Demo: Explore vcf files with bcftools: https://eriqande.github.io/eca-bioinf-handbook/basic-handling-of-vcf-files.html\n```{unix}\n\n# Who is in the VCF file?\nbcftools query -l chinook-32-3Mb.vcf.gz\n# How many variants?\nbcftools stats chinook-32-3Mb.vcf.gz\n\n# Where are these variants? Where does it start/end?\nbcftools query -f '%CHROM\\t%POS\\n' chinook-32-3Mb.vcf.gz\nbcftools query -f '%CHROM\\t%POS\\n' chinook-32-3Mb.vcf.gz | head \nbcftools query -f '%CHROM\\t%POS\\n' chinook-32-3Mb.vcf.gz | tail\n\n# show the whole file from the top (use show just the first 10 lines)\nbcftools view chinook-32-3Mb.vcf.gz | head\n\n# show just the header with -h.  Here look at just the last 10 lines of the header\nbcftools view -h chinook-32-3Mb.vcf.gz | tail\n\n# show the variants themslves (no header) with -H\nbcftools view -H chinook-32-3Mb.vcf.gz | head\n\n# Merge files. See genotypes with 100% of individuals having at least one read at the genotype.\n# make file with first three samples\nbcftools view -Oz -s DPCh_plate1_A05_S5,DPCh_plate1_A06_S6,DPCh_plate1_A11_S11 chinook-32-3Mb.vcf.gz > first3.vcf.gz\n\n# make another with the last three samples\nbcftools view -Oz -s DPCh_plate1_H06_S90,DPCh_plate1_H11_S95,DPCh_plate1_H12_S96 chinook-32-3Mb.vcf.gz > last3.vcf.gz\n\n# merging requires that the files be indexed\n\nbcftools index first3.vcf.gz\nbcftools index last3.vcf.gz\n\n# merge those into a file with 6 samples\nbcftools merge -Oz first3.vcf.gz last3.vcf.gz > 6-samples.vcf.gz\n\n# Fraction of missing sites less than X\nbcftools view -i 'F_MISSING < 0.0' chinook-32-3Mb.vcf.gz | bcftools stats - | awk '/^SN/'\n```"
  },
  {
    "objectID": "orbicella_quarto_nb.html#merge-vcf-files-to-represent-shared-snp-sites-across-the-3-species.",
    "href": "orbicella_quarto_nb.html#merge-vcf-files-to-represent-shared-snp-sites-across-the-3-species.",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "Merge VCF Files to represent shared SNP sites across the 3 species.",
    "text": "Merge VCF Files to represent shared SNP sites across the 3 species.\nhttps://github.com/sbslee/fuc https://pyvcf.readthedocs.io/en/latest/"
  },
  {
    "objectID": "orbicella_quarto_nb.html#prepare-outgroup-genome.",
    "href": "orbicella_quarto_nb.html#prepare-outgroup-genome.",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "Prepare outgroup genome.",
    "text": "Prepare outgroup genome.\nMy second task is to isolate the Cyphastrea coral reads from the rest of the microbiome reads. This can be broken down into a number of steps. The first of which is running Psytrans: https://github.com/sylvainforet/psytrans.\nThis work is being done on the Medina lab server ‘argonaute’ and can be found in the directory /home/vpg5102/Orbicella. The Symbiodiniaceae genomes can be located at /home/rag5851/Symbiodiniaceae_genomes.\nThe psytrans documentation isn’t that great, so Raul offered me some really helpful practical advice in setting up the files for the filtering of symbiont reads. First, I need to concatenate the coral and symbiont reference genomes into a single file. Name this file coralsymbiont_blastdb.\nspecies1 is the host. species2 is the symbiont. Rename each of the sequence components (i.e. >scaffold.fasta) to include the species pre-fix.\nOnce these steps are completed, run BLAST to identify which sequences are coral vs. symbiont. Run BLAST with these flags: -output 6 (gives tabulated table) -evalue 1 e-5 -out Species1Species2_blastResults.txt\n```{unix}\n# Get Orbicella genomes for cnidarian database\ncurl https://www.ncbi.nlm.nih.gov/assembly/GCA_002042975.1\ncurl https://www.ncbi.nlm.nih.gov/assembly/GCA_001896105.1\n\n# Add a broader selection of other corals as well.\n# reefgenomics.org\nfaveolata\nS.pis\nA. dig\nA. tenuis\nP. australiensis\nP. dae\nPorites lutea\n\n# So I accidentally added this file to my db: GCF_002042975.1_ofav_dov_v1_cds_from_genomic.fna. Not sure if that will impact the blast results. \n\n```\n```{unix}\n# Add species prefix before concatenating references.\n# For concatenated host genomes.\nsed “s/^>/>species1_/g”\n# For concatenated symbiont genomes.\nsed “s/^>/>species2_/g”\n# Now concatenate Coral/Symbiont Genomes\ncat *.fna > species1_species2.fasta\n```\n```{unix}\n# Creat Blastdb and designate database type\nmakeblastdb -in species1_species2_blastdb.fasta -dbtype nuc\n\n#BLAST search query of cyphastrea metagenome against database.\nblastn -query Cyphastrea_blast/Cyphastrea_metagenome.scaffolds.fasta -db species1_species2_blastdb.fasta -outfmt 6 -evalue 1e-5 -out Species1Species2_blastResults.txt\n```\nThen run the psytrans code to separate the coral data from symbiont data.\n```{unix}\n# Make a screen. Then run psytrans. 10/16/22\n# screen -S psytrans_attempt\n# python psytrans.py [QUERIES] [-b BLASTRESULTSFILE] [OPTIONS]\npython psytrans-master/psytrans.py Cyphastrea_metagenome.scaffolds.fasta -b Species1Species2_blastResults.txt -t tmp -p 8\n```\nSo that did not work. Apparently ‘maketrans’ is deprecated. I have to modify the script. I just changed string.maketrans to str.maketrans."
  },
  {
    "objectID": "orbicella_quarto_nb.html#final-filtering-step-with-blobtools-to-remove-traces-of-bacterial-reads.",
    "href": "orbicella_quarto_nb.html#final-filtering-step-with-blobtools-to-remove-traces-of-bacterial-reads.",
    "title": "Orbicella Analysis of Hybridization- Medina Lab Penn State University",
    "section": "Final filtering step with Blobtools to remove traces of bacterial reads.",
    "text": "Final filtering step with Blobtools to remove traces of bacterial reads."
  },
  {
    "objectID": "VCF_combine.html",
    "href": "VCF_combine.html",
    "title": "",
    "section": "",
    "text": "vcf_open_file = open('')\nfrom csv import reader\ngoogle_read = reader(google_open_file)\nvcf_data = list(vcf_read)"
  }
]